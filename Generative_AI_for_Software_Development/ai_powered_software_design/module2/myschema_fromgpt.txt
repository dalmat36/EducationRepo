from sqlalchemy import (
    create_engine,
    Column,
    Integer,
    String,
    Text,
    DateTime,
    ForeignKey,
    Numeric,
    func,
)
from sqlalchemy.orm import declarative_base, relationship, sessionmaker

# SQLite database file
DATABASE_URL = "sqlite:///ecommerce.db"

# Engine & Base
engine = create_engine(DATABASE_URL, echo=True)  # echo=True shows SQL in console
Base = declarative_base()
SessionLocal = sessionmaker(bind=engine)


# USERS TABLE
class User(Base):
    __tablename__ = "users"

    user_id = Column(Integer, primary_key=True, autoincrement=True)
    name = Column(String(100), nullable=False)
    email = Column(String(100), unique=True, nullable=False)
    password_hash = Column(String(255), nullable=False)
    created_at = Column(DateTime, default=func.now())

    orders = relationship("Order", back_populates="user")


# PRODUCTS TABLE
class Product(Base):
    __tablename__ = "products"

    product_id = Column(Integer, primary_key=True, autoincrement=True)
    name = Column(String(150), nullable=False)
    description = Column(Text)
    price = Column(Numeric(10, 2), nullable=False)
    stock_qty = Column(Integer, nullable=False)
    created_at = Column(DateTime, default=func.now())

    order_items = relationship("OrderItem", back_populates="product")


# ORDERS TABLE
class Order(Base):
    __tablename__ = "orders"

    order_id = Column(Integer, primary_key=True, autoincrement=True)
    user_id = Column(Integer, ForeignKey("users.user_id"), nullable=False)
    order_date = Column(DateTime, default=func.now())
    status = Column(String(50), nullable=False)
    total_amount = Column(Numeric(10, 2), nullable=False)

    user = relationship("User", back_populates="orders")
    order_items = relationship("OrderItem", back_populates="order")


# ORDER_ITEMS TABLE
class OrderItem(Base):
    __tablename__ = "order_items"

    order_item_id = Column(Integer, primary_key=True, autoincrement=True)
    order_id = Column(Integer, ForeignKey("orders.order_id"), nullable=False)
    product_id = Column(Integer, ForeignKey("products.product_id"), nullable=False)
    quantity = Column(Integer, nullable=False)
    unit_price = Column(Numeric(10, 2), nullable=False)

    order = relationship("Order", back_populates="order_items")
    product = relationship("Product", back_populates="order_items")


# CREATE ALL TABLES
def create_tables():
    Base.metadata.create_all(bind=engine)
    print("âœ… Tables created successfully.")


if __name__ == "__main__":
    create_tables()
